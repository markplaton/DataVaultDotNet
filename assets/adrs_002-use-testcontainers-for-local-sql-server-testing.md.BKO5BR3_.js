import{_ as a,c as t,o as r,ae as n}from"./chunks/framework.CCkVsPTE.js";const m=JSON.parse('{"title":"ADR 002: Use TestContainers for Local SQL Server Testing","description":"","frontmatter":{},"headers":[],"relativePath":"adrs/002-use-testcontainers-for-local-sql-server-testing.md","filePath":"adrs/002-use-testcontainers-for-local-sql-server-testing.md"}'),s={name:"adrs/002-use-testcontainers-for-local-sql-server-testing.md"};function i(o,e,l,c,d,h){return r(),t("div",null,e[0]||(e[0]=[n('<h1 id="adr-002-use-testcontainers-for-local-sql-server-testing" tabindex="-1">ADR 002: Use TestContainers for Local SQL Server Testing <a class="header-anchor" href="#adr-002-use-testcontainers-for-local-sql-server-testing" aria-label="Permalink to “ADR 002: Use TestContainers for Local SQL Server Testing”">​</a></h1><p><strong>Status:</strong> Accepted<br><strong>Date:</strong> 2025-04-18</p><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to “Context”">​</a></h2><p>We want to ensure reliable local integration testing of pipelines with SQL Server and Snowflake compatibility.</p><h2 id="options-considered" tabindex="-1">Options Considered <a class="header-anchor" href="#options-considered" aria-label="Permalink to “Options Considered”">​</a></h2><h3 id="testcontainers-for-net" tabindex="-1">TestContainers for .NET <a class="header-anchor" href="#testcontainers-for-net" aria-label="Permalink to “TestContainers for .NET”">​</a></h3><ul><li>✅ Easy to spin up ephemeral SQL Server instances</li><li>✅ Supports parallel test execution</li><li>✅ Matches CI/CD container-based testing environments</li></ul><h3 id="manually-maintained-sql-server-containers" tabindex="-1">Manually maintained SQL Server containers <a class="header-anchor" href="#manually-maintained-sql-server-containers" aria-label="Permalink to “Manually maintained SQL Server containers”">​</a></h3><ul><li>❌ More manual effort</li><li>❌ Prone to state leakage</li></ul><h3 id="embedded-sql-server-localdb" tabindex="-1">Embedded SQL Server (LocalDB) <a class="header-anchor" href="#embedded-sql-server-localdb" aria-label="Permalink to “Embedded SQL Server (LocalDB)”">​</a></h3><ul><li>❌ Not available for Linux/Mac</li><li>❌ Different behavior than full SQL Server</li></ul><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to “Decision”">​</a></h2><p>Use <strong>TestContainers for .NET</strong> to spin up SQL Server containers for local and CI integration testing.</p><h2 id="advice" tabindex="-1">Advice <a class="header-anchor" href="#advice" aria-label="Permalink to “Advice”">​</a></h2><ul><li>Use <strong>TestContainers</strong> to create isolated and repeatable test environments with ephemeral SQL Server or Snowflake test containers.</li><li>Avoid reliance on long-lived shared test databases that may accumulate state and cause flaky tests.</li></ul>',15)]))}const p=a(s,[["render",i]]);export{m as __pageData,p as default};
