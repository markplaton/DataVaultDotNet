import{_ as a,c as i,o as l,ae as s}from"./chunks/framework.CCkVsPTE.js";const p=JSON.parse('{"title":"ADR 001: Use NUKE as the Build Tool","description":"","frontmatter":{},"headers":[],"relativePath":"adrs/001-use-nuke-as-build-tool.md","filePath":"adrs/001-use-nuke-as-build-tool.md"}'),t={name:"adrs/001-use-nuke-as-build-tool.md"};function o(r,e,n,d,c,u){return l(),i("div",null,e[0]||(e[0]=[s('<h1 id="adr-001-use-nuke-as-the-build-tool" tabindex="-1">ADR 001: Use NUKE as the Build Tool <a class="header-anchor" href="#adr-001-use-nuke-as-the-build-tool" aria-label="Permalink to “ADR 001: Use NUKE as the Build Tool”">​</a></h1><p><strong>Status:</strong> Accepted<br><strong>Date:</strong> 2025-04-18</p><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to “Context”">​</a></h2><p>We require a flexible, C#-native build automation tool that integrates well with TeamCity and Octopus Deploy. We are building and packaging .NET-based ETL pipelines and database deployments.</p><h2 id="options-considered" tabindex="-1">Options Considered <a class="header-anchor" href="#options-considered" aria-label="Permalink to “Options Considered”">​</a></h2><h3 id="nuke" tabindex="-1">NUKE <a class="header-anchor" href="#nuke" aria-label="Permalink to “NUKE”">​</a></h3><ul><li>✅ Tight integration with .NET ecosystem</li><li>✅ Declarative and composable build definitions</li><li>✅ Supports TeamCity, Octopus Deploy, and TestContainers</li><li>❌ Learning curve for new developers unfamiliar with code-based build scripts</li></ul><h3 id="cake" tabindex="-1">Cake <a class="header-anchor" href="#cake" aria-label="Permalink to “Cake”">​</a></h3><ul><li>✅ Also C#-based</li><li>❌ DSL feels less idiomatic than NUKE</li><li>❌ Less modern syntax and plugin ecosystem</li></ul><h3 id="azure-devops-pipelines-yaml" tabindex="-1">Azure DevOps Pipelines / YAML <a class="header-anchor" href="#azure-devops-pipelines-yaml" aria-label="Permalink to “Azure DevOps Pipelines / YAML”">​</a></h3><ul><li>✅ Native CI/CD integration</li><li>❌ Less flexibility in build reuse across local and CI</li></ul><h3 id="msbuild-scripts" tabindex="-1">MSBuild Scripts <a class="header-anchor" href="#msbuild-scripts" aria-label="Permalink to “MSBuild Scripts”">​</a></h3><ul><li>✅ Standard with .NET</li><li>❌ Low readability and difficult to compose</li></ul><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to “Decision”">​</a></h2><p>Use <strong>NUKE</strong> to drive build, test, and deployment for .NET-based projects.</p><h2 id="advice" tabindex="-1">Advice <a class="header-anchor" href="#advice" aria-label="Permalink to “Advice”">​</a></h2><ul><li><strong>NUKE</strong> provides the best alignment with .NET projects and supports both local development and CI/CD workflows.</li><li>Treat your <code>Build.cs</code> file as a first-class citizen in your repo—document available targets in the VitePress docs site for easy discoverability.</li></ul>',17)]))}const b=a(t,[["render",o]]);export{p as __pageData,b as default};
